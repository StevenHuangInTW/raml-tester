#%RAML 0.8
---
title: simple
baseUri: http://nidi.guru/raml/{version}
version: v1
mediaType: application/default
schemas:
  - string: !include string.json

/data:
  get:
    responses:
      200:
        body:
          application/json:
            schema: |
              {"type":"string"}
/query:
  get:
    queryParameters:
      req:
        required: true
      rep:
        repeat: true
    responses:
      200:
        body:
          application/json:
            schema: |
              {"type":"string"}
/schema:
  get:
    responses:
      200:
        body:
          application/json:
            schema: |
              {"type":"string"}
      201:
        body:
          application/json:
            schema: !include string.json
      202:
        body:
          application/json:
            schema: string
      203:
        body:
          application/json:
            schema: undefined
      204:
        body:
          application/json:
            schema: |
              {"$ref": "string.json"}
      205:
        body:
          application/json:
            schema: !include ref.json
      206:
        body:
          application/xml:
            schema: !include string.xsd
      207:
        body:
          application/xml:
            schema: !include ref.xsd
      208:
        body:
          text/xml:
            schema: |
              <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema">
                  <xs:element name="api-request">
                      <xs:complexType>
                          <xs:sequence>
                              <xs:element type="xs:string" name="input"/>
                          </xs:sequence>
                      </xs:complexType>
                  </xs:element>
              </xs:schema>
      209:
        body:
          text/bla:
            schema: text/bla
/mediaType:
  get:
    responses:
      200:
        body:
          schema: string
/header:
  get:
    headers:
      req:
        required: true
      rep:
        repeat: true
      x-{?}:
    responses:
      200:
        body:
          application/json:
            schema: |
              {"type":"string"}
  /reqwild:
    get:
      headers:
        x-{?}:
          required: true
      responses:
        200:
/resheader:
  get:
    responses:
      200:
        headers:
          req:
            required: true
          rep:
            repeat: true
          x-{?}:
        body:
          application/json:
            schema: |
              {"type":"string"}
  /reqwild:
    get:
      responses:
        200:
          headers:
            x-{?}:
              required: true
/form:
  post:
    body:
      application/x-www-form-urlencoded:
        formParameters:
          param:
    responses:
      200:

  /parameterless:
    post:
      body:
        application/x-www-form-urlencoded:
      responses:
        200:

  /schema:
    post:
      body:
        application/x-www-form-urlencoded:
          formParameters:
          schema: string
      responses:
        200:

  /multi:
    post:
      body:
        multipart/form-data:
          formParameters:
            param:
            file:
              type: file
      responses:
        200:
